// etc/qbv.cfg : Config file to program QBV on each port.

// Run "qbv_sched" utility which would read this cfg and program the schedule.
// eth1(temac1), eth2(temac2) and ep are egress ports.
// The /etc/qbv.cfg has qbv schedules for all the ports but to program
// each, you need to call qbv_sched for each interface,
// To program Qbv on temac1 port : 
// # qbv_sched eth1

// Prior to programming the schedule gPTP daemon should be run.

// cycle_time in nS. Max cycle time is 1sec.
// gate_list.time in nS
// gate_list can have MAX of 256 entries.

// Each gate_list entry time shouldn't be more the 8000000nS (8ms)
// Minimum list entry time can be as low as zero, which means no packets // shall be sent out.

// "Time interval between two gate entries" must be greater than "time required
//      to transmit biggest supported frame" on that queue when the gate for the
//     queue is going from open to close state.

// Start_sec,start_ns should be >= current ptp time
//      if both are set to zero the qbv_sched utility will use
//     next second boundary of the PTP time.

// Leave cycle_time = 0 if no qbv programming needed for the
//     particular port. This would open all gates on that port.
//  To open BE use state : 1
//  To open ST use state : 4
//  To open RES use state : 2 
//  Open both ST & BE state: 5(1+4) 

qbv =
{
    ep =
    {
        start_sec = 0;
        start_ns = 0;
        cycle_time = 10000000;
	gate_list_length = 2;
        gate_list =
        (
            {
                state = 7;
                time = 2000000;
            },
            {
                state = 4;
                time = 8000000;
	    }
        );
    };
    temac1 =
    {
        start_sec = 0;
        start_ns = 0;
        cycle_time = 0;
        gate_list_length = 2;
        gate_list =
        (
            {
                state = 1;
                time = 100000;
            },
            {
                state = 4;
                time = 100000;
            },
            {
                state = 1;
                time = 100000;
            }
        );
    };
    temac2 =
    {
        start_sec = 0;
        start_ns = 0;
        cycle_time = 0;
        gate_list_length = 2;
        gate_list =
        (
            {
                state = 1;
                time = 100000;
            },
            {
                state = 4;
                time = 100000;
            },
            {
                state = 1;
                time = 100000;
            }
        );
    };
};
